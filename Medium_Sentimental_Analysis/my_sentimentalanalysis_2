import requests
from bs4 import BeautifulSoup
import pandas as pd
#ADDED
from nltk.sentiment.vader import SentimentIntensityAnalyzer
#making graph
import plotly.graph_objects as go
import plotly.subplots as make_subplots
import plotly.express as px

#grabbing content from HTML websites (financial news sites in this instance)
ticker = "TSLA"
url = "https://site.financialmodelingprep.com/financial-summary/" + ticker
request = requests.get(url)
#print(request.text)

#parsing the web content so it's actually useful
parser = BeautifulSoup(request.text, "html.parser")
news_html = parser.find_all('a', {'class': 'article-item'})
#print(news_html[0])

sentiments = []
for i in range(0, len(news_html)):
    sentiments.append(
        {
            'ticker' : ticker,
            'date' : news_html[i].find('h5', {'class':'article-date'}).text,
            'title' : news_html[i].find('h4', {'class':'article-title'}).text,
            'text' : news_html[i].find('p', {'class': 'article-text'}).text
        }
    )
    
df = pd.DataFrame(sentiments)
df = df.set_index('date')

analyser = SentimentIntensityAnalyzer()
print(df['text'][4])
print(analyser.polarity_scores(df['text'][4]))

def calc_sentiment_score(text):
    return analyser.polarity_scores(text)["compound"]

analyser = SentimentIntensityAnalyzer()
df['sentiment_score'] = df['text'].apply(calc_sentiment_score)

df['sentiment_score'].plot(kind='bar', figsize = (10, 5))
fig = px.bar(df, x = df.index, y = "sentiment_score")
fig.show()